{"ast":null,"code":"const initialState = {\n  betList: [{\n    id: \"bau\",\n    pic: \"./img/AnimalBetGameImage/bau.png\",\n    betPoint: 0\n  }, {\n    id: \"ca\",\n    pic: \"./img/AnimalBetGameImage/ca.png\",\n    betPoint: 0\n  }, {\n    id: \"cua\",\n    pic: \"./img/AnimalBetGameImage/cua.png\",\n    betPoint: 100\n  }, {\n    id: \"ga\",\n    pic: \"./img/AnimalBetGameImage/ga.png\",\n    betPoint: 0\n  }, {\n    id: \"nai\",\n    pic: \"./img/AnimalBetGameImage/nai.png\",\n    betPoint: 0\n  }, {\n    id: \"tom\",\n    pic: \"./img/AnimalBetGameImage/tom.png\",\n    betPoint: 0\n  }],\n  totalPoint: 900,\n  diceArray: [{\n    id: \"ga\",\n    pic: \"./img/AnimalBetGameImage/bau.png\"\n  }, {\n    id: \"nai\",\n    pic: \"./img/AnimalBetGameImage/cua.png\"\n  }, {\n    id: \"tom\",\n    pic: \"./img/AnimalBetGameImage/nai.png\"\n  }]\n};\nexport const AnimalBetGameReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'BET':\n      {\n        // console.log(\"action: \", action);\n        const betListUpdate = [...state.betList];\n        const index = betListUpdate.findIndex(item => item.id === action.betItem.id);\n        if (index !== -1) {\n          if (action.plusMinus && state.totalPoint > 0) {\n            betListUpdate[index].betPoint += 100;\n            state.totalPoint -= 100;\n          } else {\n            if (betListUpdate[index].betPoint > 0) {\n              betListUpdate[index].betPoint -= 100;\n              state.totalPoint += 100;\n            }\n          }\n        }\n        state.betList = betListUpdate;\n        return {\n          ...state\n        };\n      }\n    case 'PLAY':\n      {\n        console.log(\"action: \", action);\n        const randomDiceArray = [];\n        for (let i = 0; i < 3; i++) {\n          let randomIndex = Math.floor(Math.random() * 6);\n          const randomDiceItem = state.betList[randomIndex];\n          randomDiceArray.push(randomDiceItem);\n        }\n        state.diceArray = randomDiceArray;\n\n        // handle reward\n        randomDiceArray.forEach((item, index) => {\n          const indexItem = state.betList.findIndex(i => i.id === item.id);\n          if (index !== -1) {\n            state.totalPoint += state.betList[indexItem].betPoint;\n          }\n        });\n        return {\n          ...state\n        };\n      }\n    default:\n      return state;\n  }\n};\n_c = AnimalBetGameReducer;\nvar _c;\n$RefreshReg$(_c, \"AnimalBetGameReducer\");","map":{"version":3,"names":["initialState","betList","id","pic","betPoint","totalPoint","diceArray","AnimalBetGameReducer","state","arguments","length","undefined","action","type","betListUpdate","index","findIndex","item","betItem","plusMinus","console","log","randomDiceArray","i","randomIndex","Math","floor","random","randomDiceItem","push","forEach","indexItem","_c","$RefreshReg$"],"sources":["C:/miniProjects/AnimalBet/animalbet/src/redux/reducers/AnimalBetGameReducer.js"],"sourcesContent":["const initialState = {\r\n    betList: [\r\n        { id: \"bau\", pic: \"./img/AnimalBetGameImage/bau.png\", betPoint: 0 },\r\n        { id: \"ca\", pic: \"./img/AnimalBetGameImage/ca.png\", betPoint: 0 },\r\n        { id: \"cua\", pic: \"./img/AnimalBetGameImage/cua.png\", betPoint: 100 },\r\n        { id: \"ga\", pic: \"./img/AnimalBetGameImage/ga.png\", betPoint: 0 },\r\n        { id: \"nai\", pic: \"./img/AnimalBetGameImage/nai.png\", betPoint: 0 },\r\n        { id: \"tom\", pic: \"./img/AnimalBetGameImage/tom.png\", betPoint: 0 },\r\n    ],\r\n    totalPoint: 900,\r\n    diceArray: [\r\n        { id: \"ga\", pic: \"./img/AnimalBetGameImage/bau.png\" },\r\n        { id: \"nai\", pic: \"./img/AnimalBetGameImage/cua.png\" },\r\n        { id: \"tom\", pic: \"./img/AnimalBetGameImage/nai.png\" },\r\n    ],\r\n}\r\n\r\nexport const AnimalBetGameReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BET': {\r\n            // console.log(\"action: \", action);\r\n            const betListUpdate = [...state.betList];\r\n            const index = betListUpdate.findIndex(item => item.id === action.betItem.id);\r\n\r\n            if (index !== -1) {\r\n                if (action.plusMinus && state.totalPoint > 0) {\r\n                    betListUpdate[index].betPoint += 100;\r\n                    state.totalPoint -= 100;\r\n                } else {\r\n                    if (betListUpdate[index].betPoint > 0) {\r\n                        betListUpdate[index].betPoint -= 100;\r\n                        state.totalPoint += 100;\r\n                    }\r\n                }\r\n            }\r\n\r\n            state.betList = betListUpdate;\r\n            return { ...state };\r\n        }\r\n        case 'PLAY': {\r\n            console.log(\"action: \", action);\r\n\r\n            const randomDiceArray = [];\r\n\r\n            for(let i=0; i<3; i++) {\r\n                let randomIndex = Math.floor(Math.random() * 6);\r\n                const randomDiceItem = state.betList[randomIndex];\r\n                randomDiceArray.push(randomDiceItem);\r\n            }\r\n\r\n            state.diceArray = randomDiceArray;\r\n\r\n            // handle reward\r\n            randomDiceArray.forEach((item, index) => {\r\n                const indexItem = state.betList.findIndex(i => i.id === item.id);\r\n\r\n                if (index !== -1) {\r\n                    state.totalPoint += state.betList[indexItem].betPoint;\r\n                }\r\n            });\r\n\r\n            return { ...state };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}